language: java
jdk:
  - openjdk8

services:
  - mysql

branches:
  only:
    - gh-pages
    - master

# Travis CI 서버의 home
cache:
  directories:
    - '$Home/.gradle'

before_install:
  - mysql -e 'CREATE DATABASE IF NOT EXISTS my_daily_feed;'
  - mysql -u root -e "CREATE USER 'jiwon'@'localhost' IDENTIFIED BY 'jiwon';"
  - mysql -u root -e "GRANT ALL ON my_daily_feed.* TO 'jiwon'@'localhost';"

script: "./gradlew clean build"

before_deploy:
  - zip -r my-daily-feed *
  - mkdir -p deploy
  - mv my-daily-feed.zip deploy/my-daily-feed.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: "my-daily-feed-code-deploy"
    region: ap-northeast-2
    skip_cleanup: true
    acl: public_read
    local_dir: deploy # 해당 디렉토리(deploy) 내용들만 s3 로 전송
    wait-until-deployed: true
    on:
      repo: brilliantBae/my-daily-feed
      branch: master

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: "my-daily-feed-code-deploy" # S3 버킷
    key: my-daily-feed.zip # S3 버킷에 저장된 my-daily-feed.zip 파일을 EC2로 배포
    bundle_type: zip
    application: my-daily-feed # CodeDeploy 어플리케이션 이름
    deployment_group: my-daily-feed-group
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      repo: brilliantBae/my-daily-feed
      branch: master

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - jwb8705@gmail.com
